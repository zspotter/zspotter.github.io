{"version":3,"sources":["components/Patch.js","components/PatchCreateModal.js","components/PatchEditModal.js","components/Wire.js","Workspace.js","engine/patches/Patch.js","engine/patches/BasicPatches.js","engine/patches/Wire.js","engine/Network.js","App.js","engine/NetworkManager.js","engine/PatchRegistry.js","index.js"],"names":["Patch","props","onPatchMove","bind","onPortSelect","onClick","onDoubleClick","evt","data","this","id","x","y","portName","isInput","type","preventDefault","onToggleStickyPort","deletePatch","onPatchEdit","handle","defaultPosition","position","onDrag","className","onContextMenu","width","height","rx","dominantBaseline","textAnchor","name","inputs","map","input","i","classExtras","stickyInputs","has","portY","length","key","transform","patch-id","port-name","r","outputs","output","count","spacing","totalPortHeight","React","Component","defaultProps","PatchCreateModal","onClickClose","onClickPatch","target","classList","contains","onClose","stopPropagation","patchClass","onAddPatch","conditionalClass","isActive","patchRegistry","patchClasses","pair","PatchEditModal","onSubmit","properties","current","value","patchId","patch","network","getPatch","createRef","displayName","Object","entries","ref","defaultValue","getAbsoluteBBox","element","svgDocument","bbox","getBBox","offset","getBoundingClientRect","matrix","getScreenCTM","a","c","e","left","b","d","f","top","Wire","deleteWire","from","document","querySelector","fromPatch","fromPort","to","toPatch","toPort","svg","fromBox","x1","y1","toBox","x2","y2","xh","dy","Math","abs","yh","min","pathData","computePathD","markerEnd","svgCoords","pt","createSVGPoint","clientX","clientY","matrixTransform","inverse","Workspace","state","selections","lastPort","ui","activeModal","lastClickCoords","incompleteWire","toCoords","scale","getModel","onOpenModal","onCloseCreateModal","onCloseEditModal","onExecute","setState","updatePatch","wires","find","wire","addWire","coords","addPatch","inputPort","toggleStickiness","execute","xmlns","orient","markerWidth","markerHeight","refX","refY","fill","patches","forceUpdate","uuid","inports","Map","forEach","set","Set","outports","Error","canReceive","values","canGive","give","results","receive","outport","console","debug","JSON","stringify","undefined","get","hold","inport","isSticky","add","delete","wireBunch","AddPatch","in1","in2","patchName","MultiplyPatch","SignPatch","error","GatePatch","trigger","NoopPatch","LogPatch","message","log","FloatPatch","updateDisplay","updated","Number","parseFloat","isNaN","PopPatch","array","head","tail","slice","AppendPatch","elem","concat","JsFunctionPatch","functionBody","result","Function","fnc","fromOutport","toInport","val","Network","push","setInportStickiness","indexOf","splice","addWireFrom","addWireTo","removeWireFrom","removeWireTo","executionQueue","clearInports","start","Date","warn","shift","nextPatch","elapsed","NETWORK_MANAGER","patchMeta","fields","meta","updateProperties","fromPatchId","toPatchId","wirePatches","stickyInports","keys","p","registerPatch","BasicPatches","n","f1","f2","m","s","g","l","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2b746031.chunk.js","sourcesContent":["import React from 'react';\nimport Draggable from 'react-draggable';\nimport './Patch.css';\n\nclass Patch extends React.Component {\n  static defaultProps = { width: 120, height: 80 }\n\n  constructor(props) {\n    super(props);\n\n    this.onPatchMove = this.onPatchMove.bind(this);\n    this.onPortSelect = this.onPortSelect.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.onDoubleClick = this.onDoubleClick.bind(this);\n  }\n\n  onPatchMove(evt, data) {\n    this.props.onPatchMove(this.props.id, { x: data.x, y: data.y });\n  }\n\n  onPortSelect(evt, portName, isInput) {\n    if (isInput && evt.type === 'contextmenu') {\n      evt.preventDefault();\n      this.props.onToggleStickyPort(this.props.id, portName)\n      return;\n    }\n    this.props.onPortSelect(this.props.id, portName, isInput);\n  }\n\n  onClick(evt) {\n    if (evt.type !== 'contextmenu') {\n      return;\n    }\n    evt.preventDefault();\n    this.props.deletePatch(this.props.id);\n  }\n\n  onDoubleClick(evt) {\n    evt.preventDefault();\n    this.props.onPatchEdit(this.props.id);\n  }\n\n  render() {\n    return (\n      <Draggable handle='.Patch-body' defaultPosition={this.props.position} onDrag={this.onPatchMove}>\n        <g>\n          <g className='Patch-body'\n            onClick={this.onClick}\n            onContextMenu={this.onClick}\n            onDoubleClick={this.onDoubleClick}>\n            <rect className='Patch-rect'\n              width={this.props.width}\n              height={this.props.height}\n              rx='8' />\n            <text className='Patch-name'\n              x={this.props.width / 2}\n              y={this.props.height / 2}\n              width={this.props.width - 16}\n              dominantBaseline='middle'\n              textAnchor='middle'>\n              {this.props.name}\n            </text>\n          </g>\n\n          {\n            this.props.inputs.map((input, i) => {\n              const isSticky = this.props.stickyInputs.has(input);\n              const classExtras = isSticky ? \" sticky\" : \"\";\n              const y = this.portY(i, this.props.inputs.length);\n              return (\n                <g key={input} className='Patch-input' transform={`translate(0,${y})`}>\n                  <circle className={'Patch-port' + classExtras}\n                    onClick={(evt) => this.onPortSelect(evt, input, true)}\n                    onContextMenu={(evt) => this.onPortSelect(evt, input, true)}\n                    patch-id={this.props.id}\n                    port-name={input}\n                    r='5' />\n                  <text className={'Patch-port-name' + classExtras}\n                    x='-14'\n                    dominantBaseline='middle'\n                    textAnchor='end'>\n                    {input}\n                  </text>\n                </g>\n              );\n            })\n          }\n\n          {\n            this.props.outputs.map((output, i) => {\n              const y = this.portY(i, this.props.outputs.length);\n              const x = this.props.width;\n              return (\n                <g key={output} className='Patch-output' transform={`translate(${x},${y})`}>\n                  <circle className='Patch-port'\n                    onClick={(evt) => this.onPortSelect(evt, output, false)}\n                    patch-id={this.props.id}\n                    port-name={output}\n                    r='5' />\n                  <text className='Patch-port-name'\n                    x='9'\n                    dominantBaseline='middle'\n                    textAnchor='start'>\n                    {output}\n                  </text>\n                </g>\n              );\n            })\n          }\n\n        </g>\n      </Draggable>\n    );\n  }\n\n  // Calculates Y-coordinate of a port relative to a patch\n  portY(i, count) {\n    const spacing = 0.2 * this.props.height;\n    const totalPortHeight = (count - 1) * spacing;\n    return i * spacing + this.props.height / 2 - totalPortHeight / 2;\n  }\n}\n\nexport default Patch;\n","import React from 'react';\nimport './PatchModal.css';\n\nclass PatchCreateModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onClickClose = this.onClickClose.bind(this);\n    this.onClickPatch = this.onClickPatch.bind(this);\n  }\n\n  onClickClose(evt) {\n    if (evt.target.classList.contains('PatchModal-container')) {\n      this.props.onClose();\n    } else {\n      // Ignore click events from children\n      evt.stopPropagation();\n    }\n  }\n\n  onClickPatch(evt, patchClass) {\n    this.props.onAddPatch(patchClass);\n    this.props.onClose();\n  }\n\n  render() {\n    const conditionalClass = this.props.isActive ? '' : 'inactive';\n    return (\n      <div className={'PatchModal-container ' + conditionalClass} onClick={this.onClickClose}>\n        <div className='PatchModal-centered'>\n          <div className='PatchModal-content'>\n            <h2>New Patch</h2>\n            <div className='PatchModal-list'>\n              <ul>\n                {\n                  [...this.props.patchRegistry.patchClasses].map((pair) => {\n                    return (<li className='PatchModal-list-item' key={pair[1]}>\n                      <button onClick={(evt) => this.onClickPatch(evt, pair[0])}>{pair[1]}</button>\n                    </li>);\n                  })\n                }\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PatchCreateModal;\n","import React from 'react';\nimport './PatchModal.css';\n\nclass PatchEditModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.inputs = {};\n\n    this.onClickClose = this.onClickClose.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onClickClose(evt) {\n    if (evt.target.classList.contains('PatchModal-container')) {\n      this.props.onClose();\n    } else {\n      // Ignore click events from children\n      evt.stopPropagation();\n    }\n  }\n\n  onSubmit(evt) {\n    evt.preventDefault();\n    const properties = {};\n    for (let key in this.inputs) {\n      properties[key] = this.inputs[key].current.value;\n    }\n    this.props.onClose(this.props.patchId, properties);\n  }\n\n  render() {\n    if (!this.props.isActive) {\n      return null;\n    }\n\n    const patch = this.props.network.getPatch(this.props.patchId);\n    this.inputs = {};\n    for (let key in patch.properties) {\n      this.inputs[key] = React.createRef();\n    }\n\n    const conditionalClass = this.props.isActive ? '' : 'inactive';\n    return (\n      <div className={'PatchModal-container ' + conditionalClass} onClick={this.onClickClose}>\n        <div className='PatchModal-centered'>\n          <div className='PatchModal-content'>\n            <h2>Edit {patch.displayName}</h2>\n            <div className='PatchModal-list'>\n              <form onSubmit={this.onSubmit}>\n                {\n                  Object.entries(patch.properties).map(([key, value]) => (\n                    <label key={key}>\n                      {key}:\n                      <input type=\"text\" ref={this.inputs[key]} defaultValue={value}/>\n                    </label>\n                  ))\n                }\n                <input type=\"submit\" value=\"Update\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PatchEditModal;\n","import React from 'react';\nimport './Wire.css';\n\nconst BEZIER_OFFSET = 25;\n\n// Convert an SVG element's local coordinates to absolute coordinate space,\n// according to:\n// https://stackoverflow.com/questions/26049488/how-to-get-absolute-coordinates-of-object-inside-a-g-group\nfunction getAbsoluteBBox(element, svgDocument) {\n  const bbox = element.getBBox();\n  const x = bbox.x;\n  const y = bbox.y;\n\n  const offset = svgDocument.getBoundingClientRect();\n  const matrix = element.getScreenCTM();\n  return {\n    x: (matrix.a * x) + (matrix.c * y) + matrix.e - offset.left,\n    y: (matrix.b * x) + (matrix.d * y) + matrix.f - offset.top,\n    width: bbox.width,\n    height: bbox.height\n  };\n}\n\nclass Wire extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick(evt) {\n    if (evt.type !== 'contextmenu') {\n      return;\n    }\n    evt.preventDefault();\n    this.props.deleteWire(this.props.id);\n  }\n\n  computePathD() {\n    const from = document.querySelector(\n      `.Patch-output [patch-id='${this.props.fromPatch}'][port-name='${this.props.fromPort}']`);\n    const to = document.querySelector(\n      `.Patch-input [patch-id='${this.props.toPatch}'][port-name='${this.props.toPort}']`);\n    // DOM elements may be missing on first render\n    if (!from || !to) {\n      return null;\n    }\n\n    const svg = document.querySelector('.Workspace-doc');\n    const fromBox = getAbsoluteBBox(from, svg);\n    const x1 = fromBox.x + fromBox.width / 2;\n    const y1 = fromBox.y + fromBox.height / 2;\n\n    const toBox = getAbsoluteBBox(to, svg);\n    const x2 = toBox.x + toBox.width / 2 - 10;\n    const y2 = toBox.y + toBox.height / 2;\n\n    if (x2 - x1 > -20) {\n      // Simple direct curve\n      return `M${x1},${y1} C${x1 + BEZIER_OFFSET},${y1} ${x2 - BEZIER_OFFSET},${y2} ${x2},${y2}`;\n    }\n\n    // Curve that wraps back to the left\n    const xh = x2 + (x1 - x2) / 2;\n    const dy = Math.abs(y1 - y2);\n    const yh = Math.min(y1, y2) + dy / 2 + (dy < 50 ? 75 : 0);\n    return `M${x1},${y1} `\n      + `C${x1 + BEZIER_OFFSET},${y1} ${x1 + BEZIER_OFFSET},${yh} ${xh},${yh} `\n      + `S ${x2 - BEZIER_OFFSET},${y2} ${x2},${y2}`;\n  }\n\n  render() {\n    const pathData = this.computePathD() || '';\n\n    return (\n      <path\n        className='Wire-line'\n        onClick={this.onClick}\n        onContextMenu={this.onClick}\n        markerEnd='url(#head)'\n        d={pathData} />\n    );\n  }\n}\n\nexport default Wire;\n","import React from 'react';\nimport Patch from './components/Patch';\nimport PatchCreateModal from './components/PatchCreateModal';\nimport PatchEditModal from './components/PatchEditModal';\nimport Wire from './components/Wire';\nimport './Workspace.css';\n\nfunction svgCoords(evt) {\n    const svg = document.querySelector('svg');\n    var pt = svg.createSVGPoint();\n    pt.x = evt.clientX;\n    pt.y = evt.clientY;\n\n    return pt.matrixTransform(svg.getScreenCTM().inverse());\n  }\n\nclass Workspace extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selections: {\n        lastPort: null\n      },\n      ui: {\n        activeModal: null,\n        patchId: null,\n        lastClickCoords: null\n      },\n      incompleteWire: { fromPatch:null, fromPort: null, toCoords: null },\n      scale: 1,\n      ...props.network.getModel()\n    };\n\n    this.onPatchMove = this.onPatchMove.bind(this);\n    this.onPatchEdit = this.onPatchEdit.bind(this);\n    this.onPortSelect = this.onPortSelect.bind(this);\n    this.deleteWire = this.deleteWire.bind(this);\n    this.deletePatch = this.deletePatch.bind(this);\n    this.onOpenModal = this.onOpenModal.bind(this);\n    this.onCloseCreateModal = this.onCloseCreateModal.bind(this);\n    this.onCloseEditModal = this.onCloseEditModal.bind(this);\n    this.onAddPatch = this.onAddPatch.bind(this);\n    this.onToggleStickyPort = this.onToggleStickyPort.bind(this);\n    this.onExecute = this.onExecute.bind(this);\n  }\n\n  onPatchMove(patchId, position) {\n    this.setState((state, props) => {\n      this.props.network.updatePatch(patchId, { position: position });\n      return this.props.network.getModel();\n    });\n  }\n\n  onPatchEdit(patchId) {\n    if (this.props.network.getPatch(patchId).properties) {\n      this.setState({ ui: { activeModal: 'PATCH_EDIT', patchId: patchId }});\n    }\n  }\n\n  onPortSelect(patchId, portName, isInput) {\n    this.setState((state, props) => {\n      if (isInput && state.selections.lastPort) {\n        const alreadyConnected = state.wires.find((wire) =>\n          wire.fromPatch === state.selections.lastPort.patchId\n          && wire.fromPort === state.selections.lastPort.portName\n          && wire.toPatch === patchId\n          && wire.toPort === portName);\n        if (alreadyConnected) {\n          // Clear selection\n          return { selections: { lastPort: null } };\n        } else {\n          this.props.network.addWire(\n            state.selections.lastPort.patchId,\n            state.selections.lastPort.portName,\n            patchId,\n            portName\n          );\n          return {\n            // Clear selection\n            selections: { lastPort: null },\n            ...this.props.network.getModel()\n          };\n        }\n      }\n      return {\n        selections: {\n          lastPort: {\n            patchId: patchId,\n            portName: portName\n          }\n        }\n      };\n    });\n  }\n\n  deleteWire(id) {\n    this.setState((state, props) => {\n      this.props.network.deleteWire(id);\n      return this.props.network.getModel();\n    });\n  }\n\n  onOpenModal(evt) {\n    this.setState({ ui: { activeModal: 'PATCH_CREATE', lastClickCoords: svgCoords(evt) }});\n  }\n\n  onCloseCreateModal() {\n    this.setState({ ui: { activeModal: null }});\n  }\n\n  onCloseEditModal(id, properties) {\n    if (!properties) {\n      this.setState({ ui: { activeModal: null }});\n      return;\n    }\n\n    this.setState((state, props) => {\n      this.props.network.updatePatch(id, { properties });\n      return {\n        ui: { activeModal: null },\n        ...this.props.network.getModel()\n      };\n    });\n  }\n\n  onAddPatch(patchClass) {\n    const coords = this.state.ui.lastClickCoords;\n\n    this.setState((state, props) => {\n      this.props.network.addPatch(patchClass, { position: { x: coords.x - 20, y: coords.y - 20 } });\n      return this.props.network.getModel();\n    });\n  }\n\n  deletePatch(id) {\n    this.setState((state, props) => {\n      this.props.network.deletePatch(id);\n      return this.props.network.getModel();\n    });\n  }\n\n  onToggleStickyPort(patchId, inputPort) {\n    this.setState((state, props) => {\n      this.props.network.toggleStickiness(patchId, inputPort);\n      return this.props.network.getModel();\n    });\n  }\n\n  onExecute() {\n    this.props.network.execute();\n  }\n\n  render() {\n    return (\n      <div className='Workspace' >\n        <button className='Workspace-exec-btn' onClick={this.onExecute}>Execute</button>\n\n        <PatchCreateModal\n          patchRegistry={this.props.network.patchRegistry}\n          isActive={this.state.ui.activeModal === 'PATCH_CREATE'}\n          onClose={this.onCloseCreateModal}\n          onAddPatch={this.onAddPatch} />\n\n        <PatchEditModal\n          patchId={this.state.ui.patchId}\n          network={this.props.network}\n          isActive={this.state.ui.activeModal === 'PATCH_EDIT'}\n          onClose={this.onCloseEditModal} />\n\n        <div className='Workspace-view'>\n          <div className='Workspace-surface'>\n            <svg className='Workspace-doc' width='100%' height='100%' xmlns='http://www.w3.org/2000/svg'>\n              <defs>\n                <marker id='head' orient='auto' markerWidth='2' markerHeight='4' refX='0.1' refY='2'>\n                  <path d='M0,0 V4 L2,2 Z' fill='black' />\n                </marker>\n              </defs>\n              <g className='Workspace-active' transform={`scale(${this.state.scale})`} >\n\n                <rect className='Workspace-background' width='100%' height='100%' onDoubleClick={this.onOpenModal}/>\n\n                {\n                  this.state.wires.map((wire) =>\n                    <Wire key={wire.id} {...wire} deleteWire={this.deleteWire}/>)\n                }\n                {\n                  this.state.patches.map((patch) =>\n                    <Patch key={patch.id}\n                      {...patch}\n                      deletePatch={this.deletePatch}\n                      onPatchMove={this.onPatchMove}\n                      onPortSelect={this.onPortSelect}\n                      onToggleStickyPort={this.onToggleStickyPort}\n                      onPatchEdit={this.onPatchEdit}/>)\n                }\n\n              </g>\n            </svg>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    // Force a re-render after the component is first added to the DOM.\n    // This is a bit of a hack to hide the DOM issue mentioned in `Wire.computePathD()`\n    this.forceUpdate();\n  }\n}\n\nexport default Workspace;\n","import uuid from 'uuid/v4';\n\nclass Patch {\n  constructor(name, inputs, outputs) {\n    this.id = `${uuid()}(${name})`;\n    this.displayName = name;\n\n    this.inports = new Map();\n    inputs.forEach(name => this.inports.set(name, new Set()));\n\n    this.outports = new Map();\n    outputs.forEach(name => this.outports.set(name, new Set()));\n  }\n\n  receive() {\n    throw new Error('Not implemented');\n  }\n\n  execute() {\n    if (!this.canReceive()) {\n      throw new Error(\"Cannot receive\");\n    }\n    let values = {};\n    for (let [key, wires] of this.inports) {\n      for (let wire of wires) {\n        if (wire.canGive()) {\n          values[key] = wire.give();\n          break;\n        }\n      }\n    }\n\n    let results = this.receive(values);\n\n    console.debug(`Executed ${this.displayName} `\n      + `with inports ${JSON.stringify(values)} `\n      + `resulted in ${JSON.stringify(results)}`);\n\n    // Send all results to all connected outport wires\n    for (let outport in results) {\n      const value = results[outport];\n      if (value === undefined) {\n        continue;\n      }\n\n      for (let wire of this.outports.get(outport).values()) {\n        wire.hold(value);\n      }\n    }\n  }\n\n  canReceive() {\n    // At least 1 wire from each inport must be able to give\n    for (let wires of this.inports.values()) {\n      let canGive = false;\n      for (let wire of wires) {\n        if (wire.canGive()) {\n          canGive = true;\n          break;\n        }\n      }\n      if (!canGive) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  // Sets stickiness of all wires connected to an inport\n  setInportStickiness(inport, isSticky) {\n    for (let wire of this.inports.get(inport)) {\n      wire.isSticky = isSticky;\n    }\n  }\n\n  addWireTo(inport, wire) {\n    if (!this.inports.has(inport)) {\n      throw new Error(`No known inport ${inport}`);\n    }\n    this.inports.get(inport).add(wire);\n  }\n\n  removeWireTo(inport, wire) {\n    if (!this.inports.has(inport)) {\n      throw new Error(`No known inport ${inport}`);\n    }\n    this.inports.get(inport).delete(wire);\n  }\n\n  addWireFrom(outport, wire) {\n    if (!this.outports.has(outport)) {\n      throw new Error(`No known outport ${outport}`);\n    }\n    this.outports.get(outport).add(wire);\n  }\n\n  removeWireFrom(outport, wire) {\n    if (!this.outports.has(outport)) {\n      throw new Error(`No known outport ${outport}`);\n    }\n    this.outports.get(outport).delete(wire);\n  }\n\n  clearInports() {\n    for (let wireBunch of this.inports.values()) {\n      for (let wire of wireBunch) {\n        if (wire.canGive()) {\n          wire.give();\n        }\n      }\n    }\n  }\n}\n\nexport default Patch;\n","import Patch from './Patch';\n\nclass AddPatch extends Patch {\n  constructor() {\n    super('Add', ['in1', 'in2'], ['sum']);\n  }\n\n  receive({in1, in2}) {\n    return {'sum': in1 + in2};\n  }\n}\nAddPatch.patchName = 'Add';\n\nclass MultiplyPatch extends Patch {\n  constructor() {\n    super('Multiply', ['in1', 'in2'], ['product']);\n  }\n\n  receive({in1, in2}) {\n    return {'product': in1 * in2};\n  }\n}\nMultiplyPatch.patchName = 'Multiply';\n\nclass SignPatch extends Patch {\n  constructor() {\n    super('Sign', ['value'], ['positive', 'zero', 'negative']);\n  }\n\n  receive({value}) {\n    if (value > 0) {\n      return {'positive': value};\n    } else if (value === 0) {\n      return {'zero': value};\n    } else if (value < 0) {\n      return {'negative': value};\n    }\n    console.error('No sign!');\n  }\n}\nSignPatch.patchName = 'Sign';\n\nclass GatePatch extends Patch {\n  constructor() {\n    super('Gate', ['trigger', 'value'], ['value']);\n  }\n\n  receive({trigger, value}) {\n    return {'value': value};\n  }\n}\nGatePatch.patchName = 'Gate';\n\nclass NoopPatch extends Patch {\n  constructor() {\n    super('Noop', ['value'], ['value']);\n  }\n\n  receive({value}) {\n    return {'value': value};\n  }\n}\nNoopPatch.patchName = 'Noop';\n\nclass LogPatch extends Patch {\n  constructor() {\n    super('Log', ['message'], []);\n  }\n\n  receive({message}) {\n    console.log(message);\n  }\n}\nLogPatch.patchName = 'Log';\n\n// Emits a preset value once\nclass FloatPatch extends Patch {\n  constructor() {\n    super('Float', [], ['value']);\n    this.properties = { value: 123 };\n    this.updateDisplay();\n  }\n\n  updateProperties(updated) {\n    let value = Number.parseFloat(updated.value);\n    if (isNaN(value)) {\n      value = 0;\n    }\n    this.properties.value = value;\n    this.updateDisplay();\n  }\n\n  updateDisplay() {\n    this.displayName = `Float(${this.properties.value})`;\n  }\n\n  receive() {\n    return {'value': this.properties.value};\n  }\n}\nFloatPatch.patchName = 'Float';\n\nclass PopPatch extends Patch {\n  constructor() {\n    super('Pop', ['array'], ['head', 'tail']);\n  }\n\n  receive({array}) {\n    if (array.length === 0) {\n      // No head, no tail\n      return;\n    }\n    return {\n      head: array[0],\n      tail: array.slice(1)\n    };\n  }\n}\nPopPatch.patchName = 'Pop';\n\nclass AppendPatch extends Patch {\n  constructor() {\n    super('Append', ['array', 'elem'], ['array']);\n  }\n\n  receive({array, elem}) {\n    return {\n      array: array.concat([elem])\n    };\n  }\n}\nAppendPatch.patchName = 'Append';\n\n// Executes arbitrary JS in the global context. Potentially dangerous.\nclass JsFunctionPatch extends Patch {\n  constructor(properties) {\n    super('js/Function', [], ['result']);\n    this.properties = { functionBody: 'new Date()' };\n  }\n\n  updateProperties(updated) {\n    this.properties = updated;\n  }\n\n  receive() {\n    // eslint-disable-next-line\n    const fnc = new Function(`\"use strict\"; return (${this.properties.functionBody});`);\n    return { result: fnc() };\n  }\n}\nJsFunctionPatch.patchName = 'js/Function';\n\nexport {\n  AddPatch,\n  MultiplyPatch,\n  SignPatch,\n  GatePatch,\n  NoopPatch,\n  LogPatch,\n  FloatPatch,\n  PopPatch,\n  AppendPatch,\n  JsFunctionPatch,\n};\n","import uuid from 'uuid/v4';\n\nclass Wire {\n  constructor(fromPatch, fromOutport, toPatch, toInport) {\n      this.id = `${uuid()}(${fromOutport}:${toInport})`;\n      this.fromPatch = fromPatch;\n      this.fromOutport = fromOutport;\n      this.toPatch = toPatch;\n      this.toInport = toInport;\n      this.value = undefined;\n      this.isSticky = false;\n  }\n\n  canGive() {\n      return this.value !== undefined;\n  }\n\n  hold(value) {\n      if (value === undefined) {\n          throw new Error(\"Wires can't hold undefined\");\n      }\n      this.value = value;\n  }\n\n  give() {\n      if (!this.canGive()) {\n          throw new Error(\"Wire has nothing to give\");\n      }\n      let val = this.value;\n      if (!this.isSticky) {\n          this.value = undefined;\n      }\n      return val;\n  }\n}\n\nexport default Wire;\n","import Wire from \"./patches/Wire\";\n\nclass Network {\n  constructor() {\n    this.patches = [];\n    this.wires = new Map();\n  }\n\n  addPatch(patch) {\n    this.patches.push(patch);\n  }\n\n  toggleStickiness(patch, inputPort) {\n    // TODO remove wrapper\n    // TODO toggle\n    patch.setInportStickiness(inputPort, true);\n  }\n\n  deletePatch(patch) {\n    for (let wires of patch.inports.values()) {\n      for (let wire of wires) {\n        this.deleteWire(wire.id);\n      }\n    }\n    for (let wires of patch.outports.values()) {\n      for (let wire of wires) {\n        this.deleteWire(wire.id);\n      }\n    }\n    const i = this.patches.indexOf(patch);\n    this.patches.splice(i, 1);\n  }\n\n  wirePatches(fromPatch, outport, toPatch, inport) {\n    let wire = new Wire(fromPatch, outport, toPatch, inport);\n    fromPatch.addWireFrom(outport, wire);\n    toPatch.addWireTo(inport, wire);\n    this.wires.set(wire.id, wire);\n  }\n\n  deleteWire(id) {\n    const wire = this.wires.get(id);\n    this.wires.delete(id);\n    wire.fromPatch.removeWireFrom(wire.fromOutport, wire);\n    wire.toPatch.removeWireTo(wire.toInport, wire);\n  }\n\n  execute() {\n    // Patches without any inputs are executed first\n    let executionQueue = [];\n    for (let patch of this.patches) {\n      // Ensure clean state\n      patch.clearInports();\n      if (patch.canReceive()) {\n        executionQueue.push(patch);\n      }\n    }\n\n    console.debug(`Beginning execution with ${executionQueue.length} patches`);\n    const start = new Date();\n\n    while (executionQueue.length > 0) {\n      const elapsed = new Date() - start;\n      if (elapsed > 10 * 1000) {\n        console.warn('Execution taking longer than 10s. Halting prematurely.');\n        break;\n      }\n\n      const patch = executionQueue.shift();\n      if (!patch.canReceive()) {\n        console.warn(`Patch ${patch.id} was not ready to execute.`);\n        continue;\n      }\n\n      patch.execute();\n\n      // TODO end execution early if patch was an Output patch\n\n      for (let wires of patch.outports.values()) {\n        for (let wire of wires) {\n          let nextPatch = wire.toPatch;\n          // TODO don't enqueue same nextPatch twice per execution\n          if (nextPatch.canReceive()) {\n            executionQueue.push(nextPatch);\n          }\n        }\n      }\n    }\n\n    const elapsed = new Date() - start;\n    console.debug(`Completed execution in ${elapsed} ms`);\n  }\n}\n\nexport default Network;\n","import React from 'react';\nimport Workspace from './Workspace';\n\nimport * as BasicPatches from './engine/patches/BasicPatches';\nimport NetworkManager from './engine/NetworkManager';\nimport PatchRegistry from './engine/PatchRegistry';\n\nconst NETWORK_MANAGER = new NetworkManager(\n  new PatchRegistry([\n    BasicPatches.AddPatch,\n    BasicPatches.MultiplyPatch,\n    BasicPatches.SignPatch,\n    BasicPatches.GatePatch,\n    BasicPatches.NoopPatch,\n    BasicPatches.LogPatch,\n    BasicPatches.FloatPatch,\n    BasicPatches.PopPatch,\n    BasicPatches.AppendPatch,\n    BasicPatches.JsFunctionPatch,\n  ])\n);\n\n// Set up demo network\n(function () {\n  const\n    n = NETWORK_MANAGER,\n    f1 = n.addPatch(BasicPatches.FloatPatch, { position: { x: 65, y: 181 }, properties: { value: -1 } }),\n    f2 = n.addPatch(BasicPatches.FloatPatch, { position: { x: 68, y: 386 }, properties: { value: 5 } }),\n    a = n.addPatch(BasicPatches.AddPatch, { position: { x: 266, y: 207 } }),\n    m = n.addPatch(BasicPatches.MultiplyPatch, { position: { x: 306, y: 395 } }),\n    s = n.addPatch(BasicPatches.SignPatch, { position: { x: 459, y: 224 } }),\n    g = n.addPatch(BasicPatches.GatePatch, { position: { x: 613, y: 413 } }),\n    l = n.addPatch(BasicPatches.LogPatch, { position: { x: 818, y: 434 } });\n  n.addWire(f1.id, 'value', a.id, 'in1');\n  n.addWire(f2.id, 'value', a.id, 'in2');\n  n.addWire(a.id, 'sum', s.id, 'value');\n  n.addWire(f2.id, 'value', m.id, 'in2');\n  n.addWire(s.id, 'positive', a.id, 'in2');\n  n.addWire(s.id, 'positive', m.id, 'in1');\n  n.addWire(s.id, 'zero', g.id, 'trigger');\n  n.addWire(m.id, 'product', m.id, 'in2');\n  n.addWire(m.id, 'product', g.id, 'value');\n  n.addWire(g.id, 'value', l.id, 'message');\n  n.toggleStickiness(a.id, 'in1');\n})();\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1 className=\"App-header\">\n        Ifig Editor\n      </h1>\n      <Workspace network={NETWORK_MANAGER} />\n    </div>\n  );\n}\n\nexport default App;\n","import Network from './Network';\n\nclass NetworkManager {\n  constructor(patchRegistry) {\n    this.patchRegistry = patchRegistry;\n    this.network = new Network();\n    this.patchMeta = new Map();\n  }\n\n  addPatch(patchClass, properties) {\n    const patch = new patchClass();\n    this.network.addPatch(patch);\n    this.patchMeta.set(patch.id, { patch: patch });\n    this.updatePatch(patch.id, properties);\n    return patch;\n  }\n\n  getPatch(id) {\n    return this.patchMeta.get(id).patch;\n  }\n\n  // Updates meta and properties\n  updatePatch(id, fields) {\n    const meta = this.patchMeta.get(id);\n    if (fields.properties) {\n      meta.patch.updateProperties(fields.properties);\n    }\n    if (fields.position) {\n      meta.position = fields.position;\n    }\n  }\n\n  toggleStickiness(patchId, inputPort) {\n    // NB: Not really happy with current modeling since each wire connected to a single inport\n    // can technically have different stickiness, but users of this class see the inport itself\n    // as having a stickiness quality\n    const patch = this.patchMeta.get(patchId).patch;\n    let isSticky = false;\n    for (let wire of patch.inports.get(inputPort)) {\n      if (wire.isSticky) {\n        isSticky = true;\n        break;\n      }\n    }\n    patch.setInportStickiness(inputPort, !isSticky);\n  }\n\n  deletePatch(id) {\n    const patch = this.patchMeta.get(id).patch;\n    this.patchMeta.delete(id);\n    this.network.deletePatch(patch);\n  }\n\n  addWire(fromPatchId, fromPort, toPatchId, toPort) {\n    const fromPatch = this.patchMeta.get(fromPatchId).patch;\n    const toPatch = this.patchMeta.get(toPatchId).patch;\n    this.network.wirePatches(fromPatch, fromPort, toPatch, toPort);\n  }\n\n  deleteWire(id) {\n    this.network.deleteWire(id);\n  }\n\n  getModel() {\n    // TODO: Clean this junk up!!!\n    const patches = [];\n    for (let [ id, meta ] of this.patchMeta) {\n      const patch = this.patchMeta.get(id).patch;\n      const stickyInports = new Set();\n      for (let [inport, wires] of patch.inports) {\n        for (let wire of wires) {\n          if (wire.isSticky) {\n            stickyInports.add(inport);\n            break;\n          }\n        }\n      }\n      patches.push({\n        id: id,\n        name: patch.displayName,\n        inputs: [...patch.inports.keys()],\n        stickyInputs: stickyInports,\n        outputs: [...patch.outports.keys()],\n        properties: patch.properties,\n        position: meta.position\n      });\n    }\n\n    const wires = [...this.network.wires.values()].map((c) => ({\n      id: c.id,\n      fromPatch: c.fromPatch.id,\n      fromPort: c.fromOutport,\n      toPatch: c.toPatch.id,\n      toPort: c.toInport\n    }));\n\n    return {\n      patches,\n      wires\n    };\n  }\n\n  execute() {\n    this.network.execute();\n  }\n}\n\nexport default NetworkManager;\n","class PatchRegistry {\n  constructor(patches) {\n    this.patchClasses = new Map();\n\n    patches.forEach((p) => this.registerPatch(p));\n  }\n\n  registerPatch(patchClass) {\n    if (!patchClass.patchName) {\n      throw new Error('Patch class should have static patchName');\n    }\n    this.patchClasses.set(patchClass, patchClass.patchName);\n  }\n}\n\nexport default PatchRegistry;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}