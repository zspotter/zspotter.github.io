{"version":3,"sources":["components/Patch.js","components/PatchCreateModal.js","components/PatchEditModal.js","components/Wire.js","Workspace.js","engine/patches/Patch.js","engine/patches/BasicPatches.js","engine/patches/NetworkPatches.js","engine/Network.js","App.js","engine/NetworkManager.js","engine/PatchRegistry.js","index.js"],"names":["Patch","props","onPatchMove","bind","onPortSelect","onClick","onDoubleClick","evt","data","this","id","x","y","portName","isInput","type","preventDefault","onToggleStickyPort","deletePatch","onPatchEdit","handle","defaultPosition","position","onDrag","className","onContextMenu","width","height","rx","dominantBaseline","textAnchor","name","inputs","map","input","i","classExtras","stickyInputs","has","portY","length","key","transform","patch-id","port-name","r","outputs","output","count","spacing","totalPortHeight","React","Component","defaultProps","PatchCreateModal","onClickClose","onClickPatch","target","classList","contains","onClose","stopPropagation","patchClass","onAddPatch","conditionalClass","isActive","patchRegistry","patchClasses","pair","PatchEditModal","onSubmit","properties","current","value","patchId","patch","network","getPatch","createRef","displayName","Object","entries","ref","defaultValue","getAbsoluteBBox","element","svgDocument","bbox","getBBox","offset","getBoundingClientRect","matrix","getScreenCTM","a","c","e","left","b","d","f","top","Wire","deleteWire","from","document","querySelector","fromPatch","fromPort","to","toPatch","toPort","svg","fromBox","x1","y1","toBox","x2","y2","xh","dy","Math","abs","yh","min","pathData","computePathD","markerEnd","svgCoords","pt","createSVGPoint","clientX","clientY","matrixTransform","inverse","Workspace","state","selections","lastPort","ui","activeModal","lastClickCoords","incompleteWire","toCoords","scale","getModel","onOpenModal","onCloseCreateModal","onCloseEditModal","setState","updatePatch","wires","find","wire","addWire","coords","addPatch","inputPort","toggleStickiness","xmlns","orient","markerWidth","markerHeight","refX","refY","fill","patches","uuid","inputNames","outputNames","updated","Error","AddPatch","in1","in2","patchName","MultiplyPatch","SignPatch","GatePatch","trigger","NoopPatch","LogPatch","message","console","log","FloatPatch","updateDisplay","Number","parseFloat","isNaN","PopPatch","array","head","tail","slice","AppendPatch","elem","concat","JsFunctionPatch","functionBody","result","Function","fnc","InputPatch","portNames","names","split","field","trim","filter","join","values","OutputPatch","Network","Map","patchConnections","undefined","set","Set","get","delete","add","entry","port","fromPatchId","toPatchId","push","findIndex","splice","patchOutputs","every","val","executionQueue","clearInputs","keys","debug","start","Date","warn","shift","canReceive","results","receive","JSON","stringify","outputPort","connections","elapsed","NETWORK_MANAGER","patchMeta","fields","updateProperties","meta","wirePatches","execute","forEach","p","registerPatch","BasicPatches","NetworkPatches","s1","s2","a1","l1","App","onExecute","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8512275b.chunk.js","sourcesContent":["import React from 'react';\nimport Draggable from 'react-draggable';\nimport './Patch.css';\n\nclass Patch extends React.Component {\n  static defaultProps = { width: 120, height: 80 }\n\n  constructor(props) {\n    super(props);\n\n    this.onPatchMove = this.onPatchMove.bind(this);\n    this.onPortSelect = this.onPortSelect.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.onDoubleClick = this.onDoubleClick.bind(this);\n  }\n\n  onPatchMove(evt, data) {\n    this.props.onPatchMove(this.props.id, { x: data.x, y: data.y });\n  }\n\n  onPortSelect(evt, portName, isInput) {\n    if (isInput && evt.type === 'contextmenu') {\n      evt.preventDefault();\n      this.props.onToggleStickyPort(this.props.id, portName)\n      return;\n    }\n    this.props.onPortSelect(this.props.id, portName, isInput);\n  }\n\n  onClick(evt) {\n    if (evt.type !== 'contextmenu') {\n      return;\n    }\n    evt.preventDefault();\n    this.props.deletePatch(this.props.id);\n  }\n\n  onDoubleClick(evt) {\n    evt.preventDefault();\n    this.props.onPatchEdit(this.props.id);\n  }\n\n  render() {\n    return (\n      <Draggable handle='.Patch-body' defaultPosition={this.props.position} onDrag={this.onPatchMove}>\n        <g>\n          <g className='Patch-body'\n            onClick={this.onClick}\n            onContextMenu={this.onClick}\n            onDoubleClick={this.onDoubleClick}>\n            <rect className='Patch-rect'\n              width={this.props.width}\n              height={this.props.height}\n              rx='8' />\n            <text className='Patch-name'\n              x={this.props.width / 2}\n              y={this.props.height / 2}\n              width={this.props.width - 16}\n              dominantBaseline='middle'\n              textAnchor='middle'>\n              {this.props.name}\n            </text>\n          </g>\n\n          {\n            this.props.inputs.map((input, i) => {\n              const isSticky = this.props.stickyInputs.has(input);\n              const classExtras = isSticky ? \" sticky\" : \"\";\n              const y = this.portY(i, this.props.inputs.length);\n              return (\n                <g key={input} className='Patch-input' transform={`translate(0,${y})`}>\n                  <circle className={'Patch-port' + classExtras}\n                    onClick={(evt) => this.onPortSelect(evt, input, true)}\n                    onContextMenu={(evt) => this.onPortSelect(evt, input, true)}\n                    patch-id={this.props.id}\n                    port-name={input}\n                    r='5' />\n                  <text className={'Patch-port-name' + classExtras}\n                    x='-14'\n                    dominantBaseline='middle'\n                    textAnchor='end'>\n                    {input}\n                  </text>\n                </g>\n              );\n            })\n          }\n\n          {\n            this.props.outputs.map((output, i) => {\n              const y = this.portY(i, this.props.outputs.length);\n              const x = this.props.width;\n              return (\n                <g key={output} className='Patch-output' transform={`translate(${x},${y})`}>\n                  <circle className='Patch-port'\n                    onClick={(evt) => this.onPortSelect(evt, output, false)}\n                    patch-id={this.props.id}\n                    port-name={output}\n                    r='5' />\n                  <text className='Patch-port-name'\n                    x='9'\n                    dominantBaseline='middle'\n                    textAnchor='start'>\n                    {output}\n                  </text>\n                </g>\n              );\n            })\n          }\n\n        </g>\n      </Draggable>\n    );\n  }\n\n  // Calculates Y-coordinate of a port relative to a patch\n  portY(i, count) {\n    const spacing = 0.2 * this.props.height;\n    const totalPortHeight = (count - 1) * spacing;\n    return i * spacing + this.props.height / 2 - totalPortHeight / 2;\n  }\n}\n\nexport default Patch;\n","import React from 'react';\nimport './PatchModal.css';\n\nclass PatchCreateModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onClickClose = this.onClickClose.bind(this);\n    this.onClickPatch = this.onClickPatch.bind(this);\n  }\n\n  onClickClose(evt) {\n    if (evt.target.classList.contains('PatchModal-container')) {\n      this.props.onClose();\n    } else {\n      // Ignore click events from children\n      evt.stopPropagation();\n    }\n  }\n\n  onClickPatch(evt, patchClass) {\n    this.props.onAddPatch(patchClass);\n    this.props.onClose();\n  }\n\n  render() {\n    const conditionalClass = this.props.isActive ? '' : 'inactive';\n    return (\n      <div className={'PatchModal-container ' + conditionalClass} onClick={this.onClickClose}>\n        <div className='PatchModal-centered'>\n          <div className='PatchModal-content'>\n            <h2>New Patch</h2>\n            <div className='PatchModal-list'>\n              <ul>\n                {\n                  [...this.props.patchRegistry.patchClasses].map((pair) => {\n                    return (<li className='PatchModal-list-item' key={pair[1]}>\n                      <button onClick={(evt) => this.onClickPatch(evt, pair[0])}>{pair[1]}</button>\n                    </li>);\n                  })\n                }\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PatchCreateModal;\n","import React from 'react';\nimport './PatchModal.css';\n\nclass PatchEditModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.inputs = {};\n\n    this.onClickClose = this.onClickClose.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onClickClose(evt) {\n    if (evt.target.classList.contains('PatchModal-container')) {\n      this.props.onClose();\n    } else {\n      // Ignore click events from children\n      evt.stopPropagation();\n    }\n  }\n\n  onSubmit(evt) {\n    evt.preventDefault();\n    const properties = {};\n    for (let key in this.inputs) {\n      properties[key] = this.inputs[key].current.value;\n    }\n    this.props.onClose(this.props.patchId, properties);\n  }\n\n  render() {\n    if (!this.props.isActive) {\n      return null;\n    }\n\n    const patch = this.props.network.getPatch(this.props.patchId);\n    this.inputs = {};\n    for (let key in patch.properties) {\n      this.inputs[key] = React.createRef();\n    }\n\n    const conditionalClass = this.props.isActive ? '' : 'inactive';\n    return (\n      <div className={'PatchModal-container ' + conditionalClass} onClick={this.onClickClose}>\n        <div className='PatchModal-centered'>\n          <div className='PatchModal-content'>\n            <h2>Edit {patch.displayName}</h2>\n            <div className='PatchModal-list'>\n              <form onSubmit={this.onSubmit}>\n                {\n                  Object.entries(patch.properties).map(([key, value]) => (\n                    <label key={key}>\n                      {key}:\n                      <input type=\"text\" ref={this.inputs[key]} defaultValue={value}/>\n                    </label>\n                  ))\n                }\n                <input type=\"submit\" value=\"Update\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PatchEditModal;\n","import React from 'react';\nimport './Wire.css';\n\nconst BEZIER_OFFSET = 25;\n\n// Convert an SVG element's local coordinates to absolute coordinate space,\n// according to:\n// https://stackoverflow.com/questions/26049488/how-to-get-absolute-coordinates-of-object-inside-a-g-group\nfunction getAbsoluteBBox(element, svgDocument) {\n  const bbox = element.getBBox();\n  const x = bbox.x;\n  const y = bbox.y;\n\n  const offset = svgDocument.getBoundingClientRect();\n  const matrix = element.getScreenCTM();\n  return {\n    x: (matrix.a * x) + (matrix.c * y) + matrix.e - offset.left,\n    y: (matrix.b * x) + (matrix.d * y) + matrix.f - offset.top,\n    width: bbox.width,\n    height: bbox.height\n  };\n}\n\nclass Wire extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick(evt) {\n    if (evt.type !== 'contextmenu') {\n      return;\n    }\n    evt.preventDefault();\n    this.props.deleteWire(this.props.id);\n  }\n\n  computePathD() {\n    const from = document.querySelector(\n      `.Patch-output [patch-id='${this.props.fromPatch}'][port-name='${this.props.fromPort}']`);\n    const to = document.querySelector(\n      `.Patch-input [patch-id='${this.props.toPatch}'][port-name='${this.props.toPort}']`);\n    // DOM elements may be missing on first render\n    if (!from || !to) {\n      return null;\n    }\n\n    const svg = document.querySelector('.Workspace-doc');\n    const fromBox = getAbsoluteBBox(from, svg);\n    const x1 = fromBox.x + fromBox.width / 2;\n    const y1 = fromBox.y + fromBox.height / 2;\n\n    const toBox = getAbsoluteBBox(to, svg);\n    const x2 = toBox.x + toBox.width / 2 - 10;\n    const y2 = toBox.y + toBox.height / 2;\n\n    if (x2 - x1 > -20) {\n      // Simple direct curve\n      return `M${x1},${y1} C${x1 + BEZIER_OFFSET},${y1} ${x2 - BEZIER_OFFSET},${y2} ${x2},${y2}`;\n    }\n\n    // Curve that wraps back to the left\n    const xh = x2 + (x1 - x2) / 2;\n    const dy = Math.abs(y1 - y2);\n    const yh = Math.min(y1, y2) + dy / 2 + (dy < 50 ? 75 : 0);\n    return `M${x1},${y1} `\n      + `C${x1 + BEZIER_OFFSET},${y1} ${x1 + BEZIER_OFFSET},${yh} ${xh},${yh} `\n      + `S ${x2 - BEZIER_OFFSET},${y2} ${x2},${y2}`;\n  }\n\n  render() {\n    const pathData = this.computePathD() || '';\n\n    return (\n      <path\n        className='Wire-line'\n        onClick={this.onClick}\n        onContextMenu={this.onClick}\n        markerEnd='url(#head)'\n        d={pathData} />\n    );\n  }\n}\n\nexport default Wire;\n","import React from 'react';\nimport Patch from './components/Patch';\nimport PatchCreateModal from './components/PatchCreateModal';\nimport PatchEditModal from './components/PatchEditModal';\nimport Wire from './components/Wire';\nimport './Workspace.css';\n\nfunction svgCoords(evt) {\n    const svg = document.querySelector('svg');\n    var pt = svg.createSVGPoint();\n    pt.x = evt.clientX;\n    pt.y = evt.clientY;\n\n    return pt.matrixTransform(svg.getScreenCTM().inverse());\n  }\n\nclass Workspace extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selections: {\n        lastPort: null\n      },\n      ui: {\n        activeModal: null,\n        patchId: null,\n        lastClickCoords: null\n      },\n      incompleteWire: { fromPatch:null, fromPort: null, toCoords: null },\n      scale: 1,\n      ...props.network.getModel()\n    };\n\n    this.onPatchMove = this.onPatchMove.bind(this);\n    this.onPatchEdit = this.onPatchEdit.bind(this);\n    this.onPortSelect = this.onPortSelect.bind(this);\n    this.deleteWire = this.deleteWire.bind(this);\n    this.deletePatch = this.deletePatch.bind(this);\n    this.onOpenModal = this.onOpenModal.bind(this);\n    this.onCloseCreateModal = this.onCloseCreateModal.bind(this);\n    this.onCloseEditModal = this.onCloseEditModal.bind(this);\n    this.onAddPatch = this.onAddPatch.bind(this);\n    this.onToggleStickyPort = this.onToggleStickyPort.bind(this);\n  }\n\n  onPatchMove(patchId, position) {\n    this.setState((state, props) => {\n      this.props.network.updatePatch(patchId, { position: position });\n      return this.props.network.getModel();\n    });\n  }\n\n  onPatchEdit(patchId) {\n    if (this.props.network.getPatch(patchId).properties) {\n      this.setState({ ui: { activeModal: 'PATCH_EDIT', patchId: patchId }});\n    }\n  }\n\n  onPortSelect(patchId, portName, isInput) {\n    this.setState((state, props) => {\n      if (isInput && state.selections.lastPort) {\n        const alreadyConnected = state.wires.find((wire) =>\n          wire.fromPatch === state.selections.lastPort.patchId\n          && wire.fromPort === state.selections.lastPort.portName\n          && wire.toPatch === patchId\n          && wire.toPort === portName);\n        if (alreadyConnected) {\n          // Clear selection\n          return { selections: { lastPort: null } };\n        } else {\n          this.props.network.addWire(\n            state.selections.lastPort.patchId,\n            state.selections.lastPort.portName,\n            patchId,\n            portName\n          );\n          return {\n            // Clear selection\n            selections: { lastPort: null },\n            ...this.props.network.getModel()\n          };\n        }\n      }\n      return {\n        selections: {\n          lastPort: {\n            patchId: patchId,\n            portName: portName\n          }\n        }\n      };\n    });\n  }\n\n  deleteWire(id) {\n    this.setState((state, props) => {\n      this.props.network.deleteWire(id);\n      return this.props.network.getModel();\n    });\n  }\n\n  onOpenModal(evt) {\n    this.setState({ ui: { activeModal: 'PATCH_CREATE', lastClickCoords: svgCoords(evt) }});\n  }\n\n  onCloseCreateModal() {\n    this.setState({ ui: { activeModal: null }});\n  }\n\n  onCloseEditModal(id, properties) {\n    if (!properties) {\n      this.setState({ ui: { activeModal: null }});\n      return;\n    }\n\n    this.setState((state, props) => {\n      this.props.network.updatePatch(id, { properties });\n      return {\n        ui: { activeModal: null },\n        ...this.props.network.getModel()\n      };\n    });\n  }\n\n  onAddPatch(patchClass) {\n    const coords = this.state.ui.lastClickCoords;\n\n    this.setState((state, props) => {\n      this.props.network.addPatch(patchClass, { x: coords.x - 20, y: coords.y - 20 });\n      return this.props.network.getModel();\n    });\n  }\n\n  deletePatch(id) {\n    this.setState((state, props) => {\n      this.props.network.deletePatch(id);\n      return this.props.network.getModel();\n    });\n  }\n\n  onToggleStickyPort(patchId, inputPort) {\n    this.setState((state, props) => {\n      this.props.network.toggleStickiness(patchId, inputPort);\n      return this.props.network.getModel();\n    });\n  }\n\n  render() {\n    return (\n      <div className='Workspace' >\n\n        <PatchCreateModal\n          patchRegistry={this.props.network.patchRegistry}\n          isActive={this.state.ui.activeModal === 'PATCH_CREATE'}\n          onClose={this.onCloseCreateModal}\n          onAddPatch={this.onAddPatch} />\n\n        <PatchEditModal\n          patchId={this.state.ui.patchId}\n          network={this.props.network}\n          isActive={this.state.ui.activeModal === 'PATCH_EDIT'}\n          onClose={this.onCloseEditModal} />\n\n        <div className='Workspace-view'>\n          <div className='Workspace-surface'>\n            <svg className='Workspace-doc' width='100%' height='100%' xmlns='http://www.w3.org/2000/svg'>\n              <defs>\n                <marker id='head' orient='auto' markerWidth='2' markerHeight='4' refX='0.1' refY='2'>\n                  <path d='M0,0 V4 L2,2 Z' fill='black' />\n                </marker>\n              </defs>\n              <g className='Workspace-active' transform={`scale(${this.state.scale})`} >\n\n                <rect className='Workspace-background' width='100%' height='100%' onDoubleClick={this.onOpenModal}/>\n\n                {\n                  this.state.wires.map((wire) =>\n                    <Wire key={wire.id} {...wire} deleteWire={this.deleteWire}/>)\n                }\n                {\n                  this.state.patches.map((patch) =>\n                    <Patch key={patch.id}\n                      {...patch}\n                      deletePatch={this.deletePatch}\n                      onPatchMove={this.onPatchMove}\n                      onPortSelect={this.onPortSelect}\n                      onToggleStickyPort={this.onToggleStickyPort}\n                      onPatchEdit={this.onPatchEdit}/>)\n                }\n\n              </g>\n            </svg>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Workspace;\n","import uuid from 'uuid/v4';\n\nclass Patch {\n  constructor(name, inputs, outputs) {\n    this.id = `${uuid()}(${name})`;\n    this.displayName = name;\n    this.inputNames = inputs;\n    this.outputNames = outputs;\n  }\n\n  updateProperties(updated) {\n    if (this.properties) {\n      this.properties = updated;\n    }\n  }\n\n  receive() {\n    throw new Error('Not implemented');\n  }\n}\n\nexport default Patch;\n","import Patch from './Patch';\n\nclass AddPatch extends Patch {\n  constructor() {\n    super('Add', ['in1', 'in2'], ['sum']);\n  }\n\n  receive({in1, in2}) {\n    return {'sum': in1 + in2};\n  }\n}\nAddPatch.patchName = 'Add';\n\nclass MultiplyPatch extends Patch {\n  constructor() {\n    super('Multiply', ['in1', 'in2'], ['product']);\n  }\n\n  receive({in1, in2}) {\n    return {'product': in1 * in2};\n  }\n}\nMultiplyPatch.patchName = 'Multiply';\n\nclass SignPatch extends Patch {\n  constructor() {\n    super('Sign', ['value'], ['positive', 'zero', 'negative']);\n  }\n\n  receive({value}) {\n    if (value > 0) {\n      return {'positive': value};\n    } else if (value === 0) {\n      return {'zero': value};\n    } else if (value < 0) {\n      return {'negative': value};\n    }\n    // Else, NaN\n    // TODO trigger some error?\n  }\n}\nSignPatch.patchName = 'Sign';\n\nclass GatePatch extends Patch {\n  constructor() {\n    super('Gate', ['trigger', 'value'], ['value']);\n  }\n\n  receive({trigger, value}) {\n    return {'value': value};\n  }\n}\nGatePatch.patchName = 'Gate';\n\nclass NoopPatch extends Patch {\n  constructor() {\n    super('Noop', ['value'], ['value']);\n  }\n\n  receive({value}) {\n    return {'value': value};\n  }\n}\nNoopPatch.patchName = 'Noop';\n\nclass LogPatch extends Patch {\n  constructor() {\n    super('Log', ['message'], []);\n  }\n\n  receive({message}) {\n    console.log(message);\n  }\n}\nLogPatch.patchName = 'Log';\n\n// Emits a preset value once\nclass FloatPatch extends Patch {\n  constructor() {\n    super('Float', [], ['value']);\n    this.properties = { value: 123 };\n    this.updateDisplay();\n  }\n\n  updateProperties(updated) {\n    let value = Number.parseFloat(updated.value);\n    if (isNaN(value)) {\n      value = 0;\n    }\n    this.properties.value = value;\n    this.updateDisplay();\n  }\n\n  updateDisplay() {\n    this.displayName = `Float(${this.properties.value})`;\n  }\n\n  receive() {\n    return {'value': this.properties.value};\n  }\n}\nFloatPatch.patchName = 'Float';\n\nclass PopPatch extends Patch {\n  constructor() {\n    super('Pop', ['array'], ['head', 'tail']);\n  }\n\n  receive({array}) {\n    if (array.length === 0) {\n      // No head, no tail\n      return;\n    }\n    return {\n      head: array[0],\n      tail: array.slice(1)\n    };\n  }\n}\nPopPatch.patchName = 'Pop';\n\nclass AppendPatch extends Patch {\n  constructor() {\n    super('Append', ['array', 'elem'], ['array']);\n  }\n\n  receive({array, elem}) {\n    return {\n      array: array.concat([elem])\n    };\n  }\n}\nAppendPatch.patchName = 'Append';\n\n// Executes arbitrary JS in the global context. Potentially dangerous.\nclass JsFunctionPatch extends Patch {\n  constructor(properties) {\n    super('js/Function', [], ['result']);\n    this.properties = { functionBody: 'new Date()' };\n  }\n\n  receive() {\n    // eslint-disable-next-line\n    const fnc = new Function(`\"use strict\"; return (${this.properties.functionBody});`);\n    return { result: fnc() };\n  }\n}\nJsFunctionPatch.patchName = 'js/Function';\n\nexport {\n  AddPatch,\n  MultiplyPatch,\n  SignPatch,\n  GatePatch,\n  NoopPatch,\n  LogPatch,\n  FloatPatch,\n  PopPatch,\n  AppendPatch,\n  JsFunctionPatch,\n};\n","import Patch from './Patch';\n\nclass InputPatch extends Patch {\n  constructor() {\n    super('Input', [], []);\n    this.properties = { portNames: '' };\n  }\n\n  updateProperties(updated) {\n    const names = updated.portNames\n      .split(',')\n      .map((field) => field.trim())\n      .filter((field) => field.length > 0);\n\n    if (names.length > 0) {\n      this.properties.portNames = names.join(',');\n      this.outputNames = names;\n    }\n  }\n\n  receive() {\n    if (this.outputNames.length === 0) {\n      throw new Error('Input has no ports');\n    }\n    if (!this.values) {\n      throw new Error('Input values not ready');\n    }\n    return this.values;\n  }\n}\nInputPatch.patchName = 'Input';\n\nclass OutputPatch extends Patch {\n  constructor() {\n    super('Output', [], []);\n    this.properties = { portNames: '' };\n  }\n\n  updateProperties(updated) {\n    const names = updated.portNames\n      .split(',')\n      .map((field) => field.trim())\n      .filter((field) => field.length > 0);\n\n    if (names.length > 0) {\n      this.properties.portNames = names.join(',');\n      this.inputNames = names;\n    }\n  }\n\n  receive(values) {\n    this.values = values;\n  }\n}\nOutputPatch.patchName = 'Output';\n\n/*\nclass NetworkPatch extends Patch {\n  constructor(name, network) {\n    super(name, network.inputs, network.outputs);\n    this.network = network;\n  }\n\n  receive(inputs) {\n    this.network.loadInputs(inputs);\n    this.network.execute();\n    return this.network.exportOutputs();\n  }\n}\n\nclass FactorialPatch extends NetworkPatch {\n  constructor() {\n    super('Factorial', factorialNetwork);\n  }\n}\nFactorialPatch.patchName = 'Factorial';\n*/\n\nexport {\n  InputPatch,\n  OutputPatch,\n  // FactorialPatch\n};\n","class Network {\n  constructor() {\n    // Example map:\n    // {\n    //   'patch-id' : {\n    //     patch: <Patch>, // object\n    //     inputs: {\n    //       input1: undefined,\n    //       input2: 'Hello World'\n    //     },\n    //     stickyInputs: Set ['input2'],\n    //     outputs: {\n    //       output1: [\n    //         ['to-patch1-id', 'to-patch1-port'],\n    //         ['to-patch2-id', 'to-patch2-port']\n    //       ]\n    //     }\n    //   }\n    // }\n    this.patches = new Map();\n    this.patchConnections = [];\n  }\n\n  addPatch(patch) {\n    const inputs = {};\n    for (let input of patch.inputNames) {\n      inputs[input] = undefined;\n    }\n\n    const outputs = {};\n    for (let output of patch.outputNames) {\n      outputs[output] = [];\n    }\n\n    this.patches.set(patch.id, {\n      patch,\n      inputs,\n      stickyInputs: new Set(),\n      outputs\n    });\n  }\n\n  toggleStickiness(patchId, inputPort) {\n    const stickyInputs = this.patches.get(patchId).stickyInputs;\n    const isSticky = stickyInputs.has(inputPort);\n    if (!isSticky) {\n      stickyInputs.add(inputPort);\n    } else {\n      stickyInputs.delete(inputPort);\n    }\n  }\n\n  deletePatch(id) {\n    this.patches.delete(id);\n    for (let [ , entry] of this.patches) {\n      for (let port in entry.outputs) {\n        entry.outputs[port] = entry.outputs[port]\n          .filter(([toPatch, ]) => toPatch !== id);\n      }\n    }\n\n    this.patchConnections = this.patchConnections.filter((wire) =>\n      wire.fromPatch !== id && wire.toPatch !== id);\n  }\n\n  wirePatches(fromPatchId, fromPort, toPatchId, toPort) {\n    const entry = this.patches.get(fromPatchId);\n    entry.outputs[fromPort].push([toPatchId, toPort]);\n\n    this.patchConnections.push({\n      id: `${fromPatchId}.${fromPort}:${toPatchId}.${toPort}`,\n      fromPatch: fromPatchId,\n      fromPort: fromPort,\n      toPatch: toPatchId,\n      toPort: toPort\n    });\n  }\n\n  deleteWire(id) {\n    let i = this.patchConnections.findIndex((wire) => wire.id === id);\n    const wire = this.patchConnections[i];\n    this.patchConnections.splice(i, 1);\n\n    const patchOutputs = this.patches.get(wire.fromPatch).outputs[wire.fromPort];\n    i = patchOutputs.findIndex(([patch, port]) => patch === wire.toPatch && port === wire.toPort);\n    if (i < 0) {\n      throw new Error('Should not happen');\n    }\n    patchOutputs.splice(i, 1);\n  }\n\n  canReceive(patchId) {\n    return Object.values(this.patches.get(patchId).inputs)\n      .every((val) => val !== undefined);\n  }\n\n  clearInputs(patchId) {\n    const entry = this.patches.get(patchId);\n    for (let port in entry.inputs) {\n      if (!entry.stickyInputs.has(port)) {\n        entry.inputs[port] = undefined;\n      }\n    }\n  }\n\n  execute() {\n    // Patches without any inputs are executed first\n    let executionQueue = [];\n    for (let [id, entry] of this.patches) {\n      // Ensure clean state\n      this.clearInputs(id);\n      if (Object.keys(entry.inputs).length === 0) {\n        executionQueue.push(id);\n      }\n    }\n\n    console.debug(`Beginning execution with ${executionQueue.length} patches`);\n    const start = new Date();\n\n    while (executionQueue.length > 0) {\n      const elapsed = new Date() - start;\n      if (elapsed > 10 * 1000) {\n        console.warn('Execution taking longer than 10s. Halting prematurely.');\n        break;\n      }\n\n      const patchId = executionQueue.shift();\n      if (!this.canReceive(patchId)) {\n        console.warn(`Patch ${patchId} was not ready to execute.`);\n        continue;\n      }\n\n      const entry = this.patches.get(patchId);\n\n      const results = entry.patch.receive(entry.inputs);\n\n      console.debug(`Executed ${entry.patch.displayName} `\n        + `with inputs ${JSON.stringify(entry.inputs)} `\n        + `resulted in ${JSON.stringify(results)}`);\n\n      // Clear consumed inputs\n      this.clearInputs(patchId);\n\n      // TODO end execution early if patch was an Output patch\n\n      if (results === undefined) {\n        // Nothing to propogate. Connected patches are not triggered\n        continue;\n      }\n\n      for (let outputPort in entry.outputs) {\n        const value = results[outputPort];\n        if (value === undefined) {\n          continue;\n        }\n\n        // Copy value to connected patchs' inputs\n        const connections = entry.outputs[outputPort];\n        for (let [toPatchId, toPort] of connections) {\n          this.patches.get(toPatchId).inputs[toPort] = value;\n          // Enqueue connected patch for execution, if it is now ready\n          if (this.canReceive(toPatchId)) {\n            // TODO seems like it might be possible for the same patch to be enqueued twice\n            executionQueue.push(toPatchId);\n          }\n        }\n      }\n    }\n\n    const elapsed = new Date() - start;\n    console.debug(`Completed execution in ${elapsed} ms`);\n  }\n}\n\nexport default Network;\n","import React from 'react';\nimport Workspace from './Workspace';\n\nimport * as BasicPatches from './engine/patches/BasicPatches';\nimport * as NetworkPatches from './engine/patches/NetworkPatches';\nimport NetworkManager from './engine/NetworkManager';\nimport PatchRegistry from './engine/PatchRegistry';\n\nconst NETWORK_MANAGER = new NetworkManager(\n  new PatchRegistry([\n    BasicPatches.AddPatch,\n    BasicPatches.MultiplyPatch,\n    BasicPatches.SignPatch,\n    BasicPatches.GatePatch,\n    BasicPatches.NoopPatch,\n    BasicPatches.LogPatch,\n    BasicPatches.FloatPatch,\n    BasicPatches.PopPatch,\n    BasicPatches.AppendPatch,\n    BasicPatches.JsFunctionPatch,\n    NetworkPatches.InputPatch,\n    NetworkPatches.OutputPatch,\n  ])\n);\n\n// Set up demo network\n(function () {\n  const s1 = NETWORK_MANAGER.addPatch(BasicPatches.FloatPatch, { x: 100, y: 150 });\n  const s2 = NETWORK_MANAGER.addPatch(BasicPatches.FloatPatch, { x: 120, y: 500 });\n  const a1 = NETWORK_MANAGER.addPatch(BasicPatches.AddPatch, { x: 400, y: 300 });\n  const l1 = NETWORK_MANAGER.addPatch(BasicPatches.LogPatch, { x: 600, y: 300 });\n  NETWORK_MANAGER.addWire(s1.id, 'value', a1.id, 'in1');\n  NETWORK_MANAGER.addWire(s2.id, 'value', a1.id, 'in2');\n  NETWORK_MANAGER.addWire(a1.id, 'sum', l1.id, 'message');\n})();\n\nclass App extends React.Component {\n  static defaultProps = { network: NETWORK_MANAGER }\n\n  constructor(props) {\n    super(props);\n\n    this.onExecute = this.onExecute.bind(this);\n  }\n\n  onExecute() {\n    this.props.network.execute();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1 className=\"App-header\">\n          Ifig Editor\n        </h1>\n        <button className='App-exec-btn' onClick={this.onExecute}>Execute</button>\n        <Workspace network={this.props.network} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import Network from './Network';\n\nclass NetworkManager {\n  constructor(patchRegistry) {\n    this.patchRegistry = patchRegistry;\n    this.network = new Network();\n    this.patchMeta = new Map();\n  }\n\n  addPatch(patchClass, position) {\n    const patch = new patchClass();\n    this.network.addPatch(patch);\n    this.patchMeta.set(patch.id, {});\n    this.updatePatch(patch.id, { position });\n    return patch;\n  }\n\n  getPatch(id) {\n    return this.network.patches.get(id).patch;\n  }\n\n  // Updates meta and properties\n  updatePatch(id, fields) {\n    const patch = this.network.patches.get(id).patch;\n    if (fields.properties) {\n      patch.updateProperties(fields.properties);\n    }\n    const meta = this.patchMeta.get(id);\n    if (fields.position) {\n      meta.position = fields.position;\n    }\n  }\n\n  toggleStickiness(patchId, inputPort) {\n    this.network.toggleStickiness(patchId, inputPort);\n  }\n\n  deletePatch(id) {\n    this.patchMeta.delete(id);\n    this.network.deletePatch(id);\n  }\n\n  addWire(fromPatchId, fromPort, toPatchId, toPort) {\n    this.network.wirePatches(fromPatchId, fromPort, toPatchId, toPort);\n  }\n\n  deleteWire(id) {\n    this.network.deleteWire(id);\n  }\n\n  getModel() {\n    const patches = [];\n    for (let [ id, meta ] of this.patchMeta) {\n      const entry = this.network.patches.get(id);\n      const patch = entry.patch;\n      patches.push({\n        id: id,\n        name: patch.displayName,\n        // TODO copy queues so they aren't mutated?\n        // What if a Component accidentally mutates this?\n        // More likely, what if the Patch adds another input to itself?\n        inputs: patch.inputNames,\n        stickyInputs: entry.stickyInputs,\n        outputs: patch.outputNames,\n        properties: patch.properties,\n        position: meta.position\n      });\n    }\n\n    const wires = this.network.patchConnections.map((c) => ({\n      id: c.id,\n      fromPatch: c.fromPatch,\n      fromPort: c.fromPort,\n      toPatch: c.toPatch,\n      toPort: c.toPort\n    }));\n\n    return {\n      patches,\n      wires\n    };\n  }\n\n  execute() {\n    this.network.execute();\n  }\n}\n\nexport default NetworkManager;\n","class PatchRegistry {\n  constructor(patches) {\n    this.patchClasses = new Map();\n\n    patches.forEach((p) => this.registerPatch(p));\n  }\n\n  registerPatch(patchClass) {\n    if (!patchClass.patchName) {\n      throw new Error('Patch class should have static patchName');\n    }\n    this.patchClasses.set(patchClass, patchClass.patchName);\n  }\n}\n\nexport default PatchRegistry;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}